name: Go

on:
  push:
    branches: [ main ]
  pull_request:
  merge_group:
  schedule:
    - cron: '0 0 * * *'

permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        postgres-version: ['latest', 16, 15, 14, 13, 12]
        go-version: ['stable','oldstable']
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:${{ matrix.postgres-version }}
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: everyone
          POSTGRES_DB: postgres

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
      with:
        egress-policy: audit

    - name: Checkout code
      uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

    - name: Setup Go
      uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
      with:
        go-version: ${{ matrix.go-version }}

    - name: golangci-lint cache
      uses: actions/cache@3624ceb22c1c5a301c8db4169662070a689d9ea8 # v4.1.1
      with:
        path: ~/go/bin/golangci-lint
        key: ${{ runner.os }}-${{ matrix.go-version }}-golangci-lint-v1.60.1

    - name: Test
      run: |
        make linters test

    - name: Upload coverage
      uses: actions/upload-artifact@604373da6381bf24206979c74d06a550515601b9 # v4.4.1
      with:
        name: coverage_${{ matrix.go-version }}_${{ matrix.postgres-version }}
        path: coverage.html
